!function(){"use strict";angular.module("risevision.widget.common.wysihtml5",[]).directive("wysihtml5",function(){function t(t,e){var l,r,d,c,s;$(e).wysihtml5({stylesheets:t.stylesheets}),n=$(".font-picker"),a=$(".background-color"),i=$("#editable").data("wysihtml5").editor,i.on("load",function(){o(t),$.each($(t.data).find("span").andSelf(),function(){d=$(this).attr("data-standard-font"),c=$(this).attr("data-google-font"),s=$(this).attr("data-custom-font"),l=$(this).attr("data-text-color"),r=$(this).attr("data-highlight-color"),d&&i.composer.commands.exec("standardFont",d,$(this).attr("data-standard-font-family")),c&&(n.data("plugin_fontPicker").addGoogleFont(c,!1),i.composer.commands.exec("googleFont",c)),s&&(RiseVision.Common.Utilities.loadCustomFont(s,$(this).attr("data-custom-font-url"),i.composer.iframe.contentDocument),i.composer.commands.exec("customFont",s,$(this).attr("data-custom-font-url"))),l&&i.composer.commands.exec("textColor",l),r&&i.composer.commands.exec("highlightColor",r)})})}function o(t){var o,l,r,d,c=null,s=null,u=!1,m=!1,g=!1,h="",p="",f="",y="",b="",w=null,k="",S=null;o=$(".emphasis"),l=$(".font-size-picker"),r=$(".text-color"),d=$(".highlight-color"),t.$on("collectAdditionalParams",function(){t.$parent.setAdditionalParam("data",i.getValue()),t.$parent.setAdditionalParam("background",i.composer.doc.body.getAttribute("data-background-color"))}),t.$on("loadAdditionalParams",function(t,o){i.setValue(o.data),o.background&&(w=tinycolor(o.background),k=w.toHexString(),S=w.toRgb(),a.spectrum("set",w),i.composer.commands.exec("backgroundColor",k,S,[{name:"data-background-color",value:w.toRgbString()}]))}),$(".font-picker").on("show.bfhselectbox",function(){e()}),$(".font-size-picker, .line-height, .alignment").on("show.bs.dropdown",function(){e()}),$(".text-color, .highlight-color, .background-color").on("beforeShow",function(){e()}),$(".wysihtml5-sandbox").contents().find("body").on("click",function(){e(),c=i.composer.selection.getSelectedNode(),c&&3===c.nodeType&&(s=c.parentNode,s&&1===s.nodeType&&("body"!==s.tagName.toLowerCase()?(u="bold"===window.getComputedStyle(s,null).getPropertyValue("font-weight")?!0:!1,m="italic"===window.getComputedStyle(s,null).getPropertyValue("font-style")?!0:!1,g=-1!==window.getComputedStyle(s,null).getPropertyValue("text-decoration").indexOf("underline")?!0:!1,o.data("plugin_fontStyle").setStyles({bold:u,italic:m,underline:g}),h=window.getComputedStyle(s,null).getPropertyValue("font-family"),h&&n.data("plugin_fontPicker").setFont(h),p=window.getComputedStyle(s,null).getPropertyValue("font-size"),p&&l.data("plugin_fontSizePicker").setFontSize(p),f=$(s).data("line-height")?$(s).data("line-height"):1,$(".line-height button").data("wysihtml5-command-value",f),y=window.getComputedStyle(s,null).getPropertyValue("color"),b=window.getComputedStyle(s,null).getPropertyValue("background-color"),y&&r.spectrum("set",y),b&&d.spectrum("set",b)):(o.data("plugin_fontStyle").setStyles({bold:!1,italic:!1,underline:!1}),$(".line-height button").data("wysihtml5-command-value",1))))})}function e(){$(".open.alignment, .font-picker .open.bfh-selectbox, .font-size-picker .open.bfh-fontsizes, .open.line-height").removeClass("open"),$(".text-color").spectrum("hide"),$(".highlight-color").spectrum("hide"),$(".background-color").spectrum("hide")}var n,a,i=null;return{restrict:"A",scope:{stylesheets:"=",background:"=",data:"="},link:t}})}();
//# sourceMappingURL=data:application/json;base64,