!function(){"use strict";angular.module("risevision.widget.common.wysihtml5",[]).directive("wysihtml5",function(){function t(t,n){var m=null,g=null;$(n).wysihtml5({stylesheets:t.stylesheets}),a=$(".font-picker"),i=$(".background-color"),l=$(".text-color"),r=$(".highlight-color"),d=$("#editable").data("wysihtml5").editor,t.$on("loadAdditionalParams",function(t,o){u=!0,c=o,d.setValue(o.data),o.background&&(m=tinycolor(o.background),g=m.toRgb(),i.spectrum("set",m),d.composer.commands.exec("backgroundColor",g,[{name:"data-background-color",value:m.toRgbString()}])),e()}),t.$on("collectAdditionalParams",function(){m=d.composer.doc.body.getAttribute("data-background-color"),t.$parent.setAdditionalParam("data",d.getValue()),t.$parent.setAdditionalParam("background",m?m:"")}),d.on("load",function(){s=!0,o(),e()})}function e(){var t,e,o,n,i;s&&u&&$.each($("<div/>").html(c.data).find("span").addBack(),function(){o=$(this).attr("data-standard-font"),n=$(this).attr("data-google-font"),i=$(this).attr("data-custom-font"),t=$(this).attr("data-text-color"),e=$(this).attr("data-highlight-color"),o&&d.composer.commands.exec("standardFont",o,$(this).attr("data-standard-font-family")),n&&(a.data("plugin_fontPicker").addGoogleFont(n,!1),d.composer.commands.exec("googleFont",n)),i&&(RiseVision.Common.Utilities.loadCustomFont(i,$(this).attr("data-custom-font-url"),d.composer.iframe.contentDocument),d.composer.commands.exec("customFont",i,$(this).attr("data-custom-font-url"))),t&&(l.spectrum("set",t),d.composer.commands.exec("textColor",l.spectrum("get").toRgb())),e&&(r.spectrum("set",e),d.composer.commands.exec("highlightColor",r.spectrum("get").toRgb()))})}function o(){var t=null,e=null,o=!1,i=!1,c=!1,s="",u="",m="",g="",p="",h="",f=$(".emphasis"),y=$(".font-size-picker"),b=$(".alignment");$(".font-picker").on("show.bfhselectbox",function(){n()}),$(".font-size-picker, .line-height, .alignment").on("show.bs.dropdown",function(){n()}),$(".text-color, .highlight-color, .background-color").on("beforeShow",function(){n()}),$(".wysihtml5-sandbox").contents().find("body").on("click",function(){n(),t=d.composer.selection.getSelectedNode(),t&&3===t.nodeType&&(e=t.parentNode,e&&1===e.nodeType&&("body"!==e.tagName.toLowerCase()?(o="bold"===window.getComputedStyle(e,null).getPropertyValue("font-weight")?!0:!1,i="italic"===window.getComputedStyle(e,null).getPropertyValue("font-style")?!0:!1,c=-1!==window.getComputedStyle(e,null).getPropertyValue("text-decoration").indexOf("underline")?!0:!1,f.data("plugin_fontStyle").setStyles({bold:o,italic:i,underline:c}),s=window.getComputedStyle(e,null).getPropertyValue("font-family"),s&&a.data("plugin_fontPicker").setFont(s),u=window.getComputedStyle(e,null).getPropertyValue("font-size"),u&&y.data("plugin_fontSizePicker").setFontSize(u),m=window.getComputedStyle(e,null).getPropertyValue("text-align"),m=-1===$.inArray(m,["left","center","right","justify"])?"left":m,m&&b.data("plugin_alignment").setAlignment(m),g=$(e).data("line-height")?$(e).data("line-height"):1,$(".line-height button").data("wysihtml5-command-value",g),p=window.getComputedStyle(e,null).getPropertyValue("color"),h=window.getComputedStyle(e,null).getPropertyValue("background-color"),p&&l.spectrum("set",p),h&&r.spectrum("set",h)):(a.data("plugin_fontPicker").reset(),y.data("plugin_fontSizePicker").reset(),f.data("plugin_fontStyle").reset(),b.data("plugin_alignment").reset(),$(".line-height button").data("wysihtml5-command-value","1"),l.spectrum("set","#000"),r.spectrum("set","#fff"))))})}function n(){$(".open.alignment, .font-picker .open.bfh-selectbox, .font-size-picker .open.bfh-fontsizes, .open.line-height").removeClass("open"),$(".text-color").spectrum("hide"),$(".highlight-color").spectrum("hide"),$(".background-color").spectrum("hide")}var a,i,l,r,c,d=null,s=!1,u=!1;return{restrict:"A",scope:{stylesheets:"=",background:"=",data:"="},link:t}})}();
//# sourceMappingURL=data:application/json;base64,