!function(){"use strict";angular.module("risevision.widget.common.wysihtml5",[]).directive("wysihtml5",function(){function t(t,n){var m=null,g=null;$(n).wysihtml5({stylesheets:t.stylesheets}),a=$(".font-picker"),i=$(".background-color"),l=$(".text-color"),r=$(".highlight-color"),d=$("#editable").data("wysihtml5").editor,t.$on("loadAdditionalParams",function(t,e){u=!0,c=e,d.setValue(e.data),e.background&&(m=tinycolor(e.background),g=m.toRgb(),i.spectrum("set",m),d.composer.commands.exec("backgroundColor",g,[{name:"data-background-color",value:m.toRgbString()}])),o()}),t.$on("collectAdditionalParams",function(){m=d.composer.doc.body.getAttribute("data-background-color"),t.$parent.setAdditionalParam("data",d.getValue()),t.$parent.setAdditionalParam("background",m?m:"")}),d.on("load",function(){s=!0,e(),o()})}function o(){var t,o,e,n,i;s&&u&&$.each($(c.data).find("span").addBack(),function(){e=$(this).attr("data-standard-font"),n=$(this).attr("data-google-font"),i=$(this).attr("data-custom-font"),t=$(this).attr("data-text-color"),o=$(this).attr("data-highlight-color"),e&&d.composer.commands.exec("standardFont",e,$(this).attr("data-standard-font-family")),n&&(a.data("plugin_fontPicker").addGoogleFont(n,!1),d.composer.commands.exec("googleFont",n)),i&&(RiseVision.Common.Utilities.loadCustomFont(i,$(this).attr("data-custom-font-url"),d.composer.iframe.contentDocument),d.composer.commands.exec("customFont",i,$(this).attr("data-custom-font-url"))),t&&(l.spectrum("set",t),d.composer.commands.exec("textColor",l.spectrum("get").toRgb())),o&&(r.spectrum("set",o),d.composer.commands.exec("highlightColor",r.spectrum("get").toRgb()))})}function e(){var t,o,e=null,i=null,c=!1,s=!1,u=!1,m="",g="",p="",h="",f="";t=$(".emphasis"),o=$(".font-size-picker"),$(".font-picker").on("show.bfhselectbox",function(){n()}),$(".font-size-picker, .line-height, .alignment").on("show.bs.dropdown",function(){n()}),$(".text-color, .highlight-color, .background-color").on("beforeShow",function(){n()}),$(".wysihtml5-sandbox").contents().find("body").on("click",function(){n(),e=d.composer.selection.getSelectedNode(),e&&3===e.nodeType&&(i=e.parentNode,i&&1===i.nodeType&&("body"!==i.tagName.toLowerCase()?(c="bold"===window.getComputedStyle(i,null).getPropertyValue("font-weight")?!0:!1,s="italic"===window.getComputedStyle(i,null).getPropertyValue("font-style")?!0:!1,u=-1!==window.getComputedStyle(i,null).getPropertyValue("text-decoration").indexOf("underline")?!0:!1,t.data("plugin_fontStyle").setStyles({bold:c,italic:s,underline:u}),m=window.getComputedStyle(i,null).getPropertyValue("font-family"),m&&a.data("plugin_fontPicker").setFont(m),g=window.getComputedStyle(i,null).getPropertyValue("font-size"),g&&o.data("plugin_fontSizePicker").setFontSize(g),p=$(i).data("line-height")?$(i).data("line-height"):1,$(".line-height button").data("wysihtml5-command-value",p),h=window.getComputedStyle(i,null).getPropertyValue("color"),f=window.getComputedStyle(i,null).getPropertyValue("background-color"),h&&l.spectrum("set",h),f&&r.spectrum("set",f)):(t.data("plugin_fontStyle").setStyles({bold:!1,italic:!1,underline:!1}),$(".line-height button").data("wysihtml5-command-value",1))))})}function n(){$(".open.alignment, .font-picker .open.bfh-selectbox, .font-size-picker .open.bfh-fontsizes, .open.line-height").removeClass("open"),$(".text-color").spectrum("hide"),$(".highlight-color").spectrum("hide"),$(".background-color").spectrum("hide")}var a,i,l,r,c,d=null,s=!1,u=!1;return{restrict:"A",scope:{stylesheets:"=",background:"=",data:"="},link:t}})}();
//# sourceMappingURL=data:application/json;base64,