!function(){"use strict";angular.module("risevision.widget.common.wysihtml5",[]).directive("wysihtml5",function(){function t(t,n){var m=null,g=null;$(n).wysihtml5({stylesheets:t.stylesheets}),a=$(".font-picker"),l=$(".background-color"),i=$(".text-color"),r=$(".highlight-color"),c=$("#editable").data("wysihtml5").editor,t.$on("loadAdditionalParams",function(t,o){u=!0,d=o,c.setValue(o.data),o.background&&(m=tinycolor(o.background),g=m.toRgb(),l.spectrum("set",m),c.composer.commands.exec("backgroundColor",g,[{name:"data-background-color",value:m.toRgbString()}])),e()}),t.$on("collectAdditionalParams",function(){m=c.composer.doc.body.getAttribute("data-background-color"),t.$parent.setAdditionalParam("data",c.getValue()),t.$parent.setAdditionalParam("background",m?m:"")}),c.on("load",function(){s=!0,o(),e()})}function e(){var t,e,o,n,l;s&&u&&$.each($(d.data).find("span").addBack(),function(){o=$(this).attr("data-standard-font"),n=$(this).attr("data-google-font"),l=$(this).attr("data-custom-font"),t=$(this).attr("data-text-color"),e=$(this).attr("data-highlight-color"),o&&c.composer.commands.exec("standardFont",o,$(this).attr("data-standard-font-family")),n&&(a.data("plugin_fontPicker").addGoogleFont(n,!1),c.composer.commands.exec("googleFont",n)),l&&(RiseVision.Common.Utilities.loadCustomFont(l,$(this).attr("data-custom-font-url"),c.composer.iframe.contentDocument),c.composer.commands.exec("customFont",l,$(this).attr("data-custom-font-url"))),t&&(i.spectrum("set",t),c.composer.commands.exec("textColor",i.spectrum("get").toRgb())),e&&(r.spectrum("set",e),c.composer.commands.exec("highlightColor",r.spectrum("get").toRgb()))})}function o(){var t=null,e=null,o=!1,l=!1,d=!1,s="",u="",m="",g="",p="",h="",f=$(".emphasis"),y=$(".font-size-picker"),b=$(".alignment");$(".font-picker").on("show.bfhselectbox",function(){n()}),$(".font-size-picker, .line-height, .alignment").on("show.bs.dropdown",function(){n()}),$(".text-color, .highlight-color, .background-color").on("beforeShow",function(){n()}),$(".wysihtml5-sandbox").contents().find("body").on("click",function(){n(),t=c.composer.selection.getSelectedNode(),t&&3===t.nodeType&&(e=t.parentNode,e&&1===e.nodeType&&("body"!==e.tagName.toLowerCase()?(o="bold"===window.getComputedStyle(e,null).getPropertyValue("font-weight")?!0:!1,l="italic"===window.getComputedStyle(e,null).getPropertyValue("font-style")?!0:!1,d=-1!==window.getComputedStyle(e,null).getPropertyValue("text-decoration").indexOf("underline")?!0:!1,f.data("plugin_fontStyle").setStyles({bold:o,italic:l,underline:d}),s=window.getComputedStyle(e,null).getPropertyValue("font-family"),s&&a.data("plugin_fontPicker").setFont(s),u=window.getComputedStyle(e,null).getPropertyValue("font-size"),u&&y.data("plugin_fontSizePicker").setFontSize(u),m=window.getComputedStyle(e,null).getPropertyValue("text-align"),m&&b.data("plugin_alignment").setAlignment(m),g=$(e).data("line-height")?$(e).data("line-height"):1,$(".line-height button").data("wysihtml5-command-value",g),p=window.getComputedStyle(e,null).getPropertyValue("color"),h=window.getComputedStyle(e,null).getPropertyValue("background-color"),p&&i.spectrum("set",p),h&&r.spectrum("set",h)):(f.data("plugin_fontStyle").setStyles({bold:!1,italic:!1,underline:!1}),$(".line-height button").data("wysihtml5-command-value",1))))})}function n(){$(".open.alignment, .font-picker .open.bfh-selectbox, .font-size-picker .open.bfh-fontsizes, .open.line-height").removeClass("open"),$(".text-color").spectrum("hide"),$(".highlight-color").spectrum("hide"),$(".background-color").spectrum("hide")}var a,l,i,r,d,c=null,s=!1,u=!1;return{restrict:"A",scope:{stylesheets:"=",background:"=",data:"="},link:t}})}();
//# sourceMappingURL=data:application/json;base64,