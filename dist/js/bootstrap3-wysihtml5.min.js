!function(t,i){"use strict";var a={alignment:function(){return"<li><div class='alignment'></div></li>"},font:function(){return"<li><div class='font-picker'></div></li>"},"font-size":function(){return"<li><div class='font-size-picker'></div></li>"},"line-height":function(t){return"<li><div class='line-height btn-group'><button type='button' class='btn btn-default btn-sm dropdown-toggle'data-toggle='dropdown' data-wysihtml5-command-value='1'><i class='glyphicon glyphicon-text-height'></i><span class='caret'></span></button><ul class='dropdown-menu' role='menu'><li><a data-wysihtml5-command-value='1' tabindex='-1'>"+t.line_height.single+"</a></li><li><a data-wysihtml5-command-value='1-15' tabindex='-1'>1.15</a></li><li><a data-wysihtml5-command-value='1-5' tabindex='-1'>1.5</a></li><li><a data-wysihtml5-command-value='2' tabindex='-1'>"+t.line_height.double+"</a></li></ul></div></li>"},"text-color":function(){return"<li><input class='text-color' type='color'></li>"},"highlight-color":function(){return"<li><input class='highlight-color' type='color'></li>"},"background-color":function(){return"<li><input class='background-color' type='color'></li>"},clear:function(){return"<li><a class='clear btn btn-sm btn-default' data-wysihtml5-command='clear' title='Clear' tabindex='-1'><span class='glyphicon glyphicon-file'></span></a></li>"},"font-styles":function(t,i){var a=i&&i.size?" btn-"+i.size:"";return"<li class='dropdown'><a class='btn dropdown-toggle "+a+" btn-default' data-toggle='dropdown' href='#'><i class='glyphicon glyphicon-font'></i>&nbsp;<span class='current-font'>"+t.font_styles.normal+"</span>&nbsp;<b class='caret'></b></a><ul class='dropdown-menu' role='menu'><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='div' tabindex='-1'>"+t.font_styles.normal+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h1' tabindex='-1'>"+t.font_styles.h1+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h2' tabindex='-1'>"+t.font_styles.h2+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h3' tabindex='-1'>"+t.font_styles.h3+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h4'>"+t.font_styles.h4+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h5'>"+t.font_styles.h5+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h6'>"+t.font_styles.h6+"</a></li></ul></li>"},emphasis:function(){return"<li><div class='emphasis'><div></li>"},lists:function(t,i){var a=i&&i.size?" btn-"+i.size:"";return"<li><div class='btn-group'><a class='btn "+a+" btn-default' data-wysihtml5-command='insertUnorderedList' title='"+t.lists.unordered+"' tabindex='-1'><i class='glyphicon glyphicon-list'></i></a><a class='btn "+a+" btn-default' data-wysihtml5-command='insertOrderedList' title='"+t.lists.ordered+"' tabindex='-1'><i class='glyphicon glyphicon-th-list'></i></a><a class='btn "+a+" btn-default' data-wysihtml5-command='Outdent' title='"+t.lists.outdent+"' tabindex='-1'><i class='glyphicon glyphicon-indent-right'></i></a><a class='btn -"+a+" btn-default' data-wysihtml5-command='Indent' title='"+t.lists.indent+"' tabindex='-1'><i class='glyphicon glyphicon-indent-left'></i></a></div></li>"},link:function(t,i){var a=i&&i.size?" btn-"+i.size:"";return"<li><div class='bootstrap-wysihtml5-insert-link-modal modal fade'><div class='modal-dialog'><div class='modal-content'><div class='modal-header'><a class='close' data-dismiss='modal'>&times;</a><h4>"+t.link.insert+"</h4></div><div class='modal-body'><input value='http://' class='bootstrap-wysihtml5-insert-link-url form-control'><label class='checkbox'> <input type='checkbox' class='bootstrap-wysihtml5-insert-link-target' checked>"+t.link.target+"</label></div><div class='modal-footer'><button class='btn btn-default' data-dismiss='modal'>"+t.link.cancel+"</button><button href='#' class='btn btn-primary' data-dismiss='modal'>"+t.link.insert+"</button></div></div></div></div><a class='btn "+a+" btn-default' data-wysihtml5-command='createLink' title='"+t.link.insert+"' tabindex='-1'><i class='glyphicon glyphicon-share'></i></a></li>"},image:function(t,i){var a=i&&i.size?" btn-"+i.size:"";return"<li><div class='bootstrap-wysihtml5-insert-image-modal modal fade'><div class='modal-dialog'><div class='modal-content'><div class='modal-header'><a class='close' data-dismiss='modal'>&times;</a><h4>"+t.image.insert+"</h4></div><div class='modal-body'><input value='http://' class='bootstrap-wysihtml5-insert-image-url form-control'></div><div class='modal-footer'><button class='btn btn-default' data-dismiss='modal'>"+t.image.cancel+"</button><button class='btn btn-primary' data-dismiss='modal'>"+t.image.insert+"</button></div></div></div></div><a class='btn "+a+" btn-default' data-wysihtml5-command='insertImage' title='"+t.image.insert+"' tabindex='-1'><i class='glyphicon glyphicon-picture'></i></a></li>"},html:function(t,i){var a=i&&i.size?" btn-"+i.size:"";return"<li><div class='btn-group'><a class='btn "+a+" btn-default' data-wysihtml5-action='change_view' title='"+t.html.edit+"' tabindex='-1'><i class='glyphicon glyphicon-pencil'></i></a></div></li>"},color:function(t,i){var a=i&&i.size?" btn-"+i.size:"";return"<li class='dropdown'><a class='btn dropdown-toggle "+a+" btn-default' data-toggle='dropdown' href='#' tabindex='-1'><span class='current-color'>"+t.colours.black+"</span>&nbsp;<b class='caret'></b></a><ul class='dropdown-menu'><li><div class='wysihtml5-colors' data-wysihtml5-command-value='black'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='black'>"+t.colours.black+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='silver'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='silver'>"+t.colours.silver+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='gray'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='gray'>"+t.colours.gray+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='maroon'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='maroon'>"+t.colours.maroon+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='red'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='red'>"+t.colours.red+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='purple'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='purple'>"+t.colours.purple+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='green'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='green'>"+t.colours.green+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='olive'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='olive'>"+t.colours.olive+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='navy'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='navy'>"+t.colours.navy+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='blue'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='blue'>"+t.colours.blue+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='orange'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='orange'>"+t.colours.orange+"</a></li></ul></li>"}},o=function(t,i,o){return a[t](i,o)},l=function(i,o){this.el=i;var l=o||n;for(var e in l.customTemplates)a[e]=l.customTemplates[e];this.toolbar=this.createToolbar(i,l),this.editor=this.createEditor(o),window.editor=this.editor,t(window).trigger("editorLoaded"),t("iframe.wysihtml5-sandbox").each(function(i,a){t(a.contentWindow).off("focus.wysihtml5").on({"focus.wysihtml5":function(){t("li.dropdown").removeClass("open")}})})};l.prototype={constructor:l,createEditor:function(a){a=a||{},a=t.extend(!0,{},a),a.toolbar=this.toolbar[0];var o=new i.Editor(this.el[0],a);if(a&&a.events)for(var l in a.events)o.on(l,a.events[l]);return o},createToolbar:function(i,a){var l=this,e=t("<ul/>",{"class":"wysihtml5-toolbar",style:"display:none"}),r=a.locale||n.locale||"en";for(var c in n){var d=!1;void 0!==a[c]?a[c]===!0&&(d=!0):d=n[c],d===!0&&(e.append(o(c,s[r],a)),"html"===c&&this.initHtml(e),"link"===c&&this.initInsertLink(e),"image"===c&&this.initInsertImage(e),"alignment"===c&&this.initAlignment(e),"font"===c&&this.initFont(e),"font-size"===c&&this.initFontSize(e),"emphasis"===c&&this.initEmphasis(e),"text-color"===c&&this.initColorPicker(e,{elem:".text-color",type:"text",color:"#000",command:"textColor",attribute:"data-text-color"}),"highlight-color"===c&&this.initColorPicker(e,{elem:".highlight-color",type:"highlight",color:"transparent",command:"highlightColor",attribute:"data-highlight-color"}),"background-color"===c&&this.initColorPicker(e,{elem:".background-color",type:"background",color:"#fff",command:"backgroundColor",attribute:"data-background-color"}))}if(a.toolbar)for(c in a.toolbar)e.append(a.toolbar[c]);return e.find("a[data-wysihtml5-command='formatBlock']").click(function(i){var a=i.target||i.srcElement,o=t(a);l.toolbar.find(".current-font").text(o.html())}),e.find("a[data-wysihtml5-command='foreColor']").click(function(i){var a=i.target||i.srcElement,o=t(a);l.toolbar.find(".current-color").text(o.html())}),e.find(".line-height").on("shown.bs.dropdown",function(i){var a=t(i.target),o=a.find("button").data("wysihtml5-command-value");setTimeout(function(){a.find("a[data-wysihtml5-command-value='"+o+"']").focus()},0)}),e.find(".line-height a").click(function(i){var a=i.target||i.srcElement,o=t(a),n=o.data("wysihtml5-command-value");e.find(".line-height button").data("wysihtml5-command-value",n),l.editor.composer.commands.exec("lineHeight",n,[{name:"data-line-height",value:n}])}),this.el.before(e),e},initHtml:function(t){var i="a[data-wysihtml5-action='change_view']";t.find(i).click(function(){t.find("a.btn").not(i).toggleClass("disabled")})},initInsertImage:function(i){var a,o=this,l=i.find(".bootstrap-wysihtml5-insert-image-modal"),e=l.find(".bootstrap-wysihtml5-insert-image-url"),n=l.find(".btn-primary"),s=e.val(),r=function(){var t=e.val();e.val(s),o.editor.currentView.element.focus(),a&&(o.editor.composer.selection.setBookmark(a),a=null),o.editor.composer.commands.exec("insertImage",t)};e.keypress(function(t){13==t.which&&(r(),l.modal("hide"))}),n.click(r),l.on("shown",function(){e.focus()}),l.on("hide",function(){o.editor.currentView.element.focus()}),i.find("a[data-wysihtml5-command=insertImage]").click(function(){var i=t(this).hasClass("wysihtml5-command-active");return i?!0:(o.editor.currentView.element.focus(!1),a=o.editor.composer.selection.getBookmark(),l.appendTo("body").modal("show"),l.on("click.dismiss.modal",'[data-dismiss="modal"]',function(t){t.stopPropagation()}),!1)})},initInsertLink:function(i){var a,o=this,l=i.find(".bootstrap-wysihtml5-insert-link-modal"),e=l.find(".bootstrap-wysihtml5-insert-link-url"),n=l.find(".bootstrap-wysihtml5-insert-link-target"),s=l.find(".btn-primary"),r=e.val(),c=function(){var t=e.val();e.val(r),o.editor.currentView.element.focus(),a&&(o.editor.composer.selection.setBookmark(a),a=null);var i=n.prop("checked");o.editor.composer.commands.exec("createLink",{href:t,target:i?"_blank":"_self",rel:i?"nofollow":""})};e.keypress(function(t){13==t.which&&(c(),l.modal("hide"))}),s.click(c),l.on("shown",function(){e.focus()}),l.on("hide",function(){o.editor.currentView.element.focus()}),i.find("a[data-wysihtml5-command=createLink]").click(function(){var i=t(this).hasClass("wysihtml5-command-active");return i?!0:(o.editor.currentView.element.focus(!1),a=o.editor.composer.selection.getBookmark(),l.appendTo("body").modal("show"),l.on("click.dismiss.modal",'[data-dismiss="modal"]',function(t){t.stopPropagation()}),!1)})},initAlignment:function(t){t.find(".alignment").alignment()},initFont:function(i){t(window).on("editorLoaded",function(){i.find(".font-picker").data("plugin_fontPicker").setContentDoc(self.editor.composer.iframe.contentDocument)}),i.find(".font-picker").fontPicker({}).on("standardFontSelected",function(t,i,a){self.editor.composer.commands.exec("standardFont",i,a,[{name:"data-standard-font",value:i},{name:"data-standard-font-family",value:a}]),self.editor.focus()}).on("googleFontSelected",function(t,i){self.editor.composer.commands.exec("googleFont",i,[{name:"data-google-font",value:i}]),self.editor.focus()}).on("customFontSelected",function(t,i,a){self.editor.composer.commands.exec("customFont",i,[{name:"data-custom-font",value:i},{name:"data-custom-font-url",value:a}]),self.editor.focus()})},initFontSize:function(t){t.find(".font-size-picker").fontSizePicker().on("sizeChanged",function(t,i){self.editor.composer.commands.exec("fontSize",i),self.editor.focus()})},initEmphasis:function(t){t.find(".emphasis").fontStyle()},initColorPicker:function(t,i){t.find(i.elem).spectrum({cancelText:"Cancel",chooseText:"Apply",clickoutFiresChange:!0,color:i.color,preferredFormat:"hex",showAlpha:!0,showInput:!0,type:i.type,change:function(t){var a=t.toRgb();self.editor.composer.commands.exec(i.command,a,[{name:i.attribute,value:t.toRgbString()}]),self.editor.focus()}})}};var e={resetDefaults:function(){t.fn.wysihtml5.defaultOptions=t.extend(!0,{},t.fn.wysihtml5.defaultOptionsCache)},bypassDefaults:function(i){return this.each(function(){var a=t(this);a.data("wysihtml5",new l(a,i))})},shallowExtend:function(i){var a=t.extend({},t.fn.wysihtml5.defaultOptions,i||{},t(this).data()),o=this;return e.bypassDefaults.apply(o,[a])},deepExtend:function(i){var a=t.extend(!0,{},t.fn.wysihtml5.defaultOptions,i||{}),o=this;return e.bypassDefaults.apply(o,[a])},init:function(t){var i=this;return e.shallowExtend.apply(i,[t])}};t.fn.wysihtml5=function(i){return e[i]?e[i].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof i&&i?(t.error("Method "+i+" does not exist on jQuery.wysihtml5"),void 0):e.init.apply(this,arguments)},t.fn.wysihtml5.Constructor=l;var n=t.fn.wysihtml5.defaultOptions={font:!0,"font-size":!0,emphasis:!0,alignment:!0,"line-height":!0,"highlight-color":!0,"text-color":!0,"background-color":!0,clear:!0,color:!1,"font-styles":!1,html:!1,image:!1,link:!1,lists:!1,size:"sm",events:{},parserRules:{classes:{"wysiwyg-color-silver":1,"wysiwyg-color-gray":1,"wysiwyg-color-white":1,"wysiwyg-color-maroon":1,"wysiwyg-color-red":1,"wysiwyg-color-purple":1,"wysiwyg-color-fuchsia":1,"wysiwyg-color-green":1,"wysiwyg-color-lime":1,"wysiwyg-color-olive":1,"wysiwyg-color-yellow":1,"wysiwyg-color-navy":1,"wysiwyg-color-blue":1,"wysiwyg-color-teal":1,"wysiwyg-color-aqua":1,"wysiwyg-color-orange":1,"align-left":1,"align-center":1,"align-right":1,justify:1},tags:{b:{},i:{},br:{},ol:{},ul:{},li:{},h1:{},h2:{},h3:{},h4:{},h5:{},h6:{},blockquote:{},u:1,img:{check_attributes:{width:"numbers",alt:"alt",src:"url",height:"numbers"}},a:{check_attributes:{href:"url",target:"alt",rel:"alt"}},span:1,div:1,code:1,pre:1}},stylesheets:["./css/bootstrap3-wysiwyg5-color.css"],locale:"en"};"undefined"==typeof t.fn.wysihtml5.defaultOptionsCache&&(t.fn.wysihtml5.defaultOptionsCache=t.extend(!0,{},t.fn.wysihtml5.defaultOptions));var s=t.fn.wysihtml5.locale={en:{font_styles:{normal:"Normal text",h1:"Heading 1",h2:"Heading 2",h3:"Heading 3",h4:"Heading 4",h5:"Heading 5",h6:"Heading 6"},emphasis:{bold:"Bold",italic:"Italic",underline:"Underline"},lists:{unordered:"Unordered list",ordered:"Ordered list",outdent:"Outdent",indent:"Indent"},link:{insert:"Insert link",cancel:"Cancel",target:"Open link in new window"},image:{insert:"Insert image",cancel:"Cancel"},html:{edit:"Edit HTML"},colours:{black:"Black",silver:"Silver",gray:"Grey",maroon:"Maroon",red:"Red",purple:"Purple",green:"Green",olive:"Olive",navy:"Navy",blue:"Blue",orange:"Orange"},line_height:{single:"Single","double":"Double"}}}}(window.jQuery,window.wysihtml5);
//# sourceMappingURL=data:application/json;base64,